<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="College1enDataSet" targetNamespace="http://tempuri.org/College1enDataSet.xsd" xmlns:mstns="http://tempuri.org/College1enDataSet.xsd" xmlns="http://tempuri.org/College1enDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="College1enConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="College1enConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.College1en.Properties.Settings.GlobalReference.Default.College1enConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CoursesTableAdapter" GeneratorDataComponentClassName="CoursesTableAdapter" Name="Courses" UserDataComponentName="CoursesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="College1enConnectionString (Settings)" DbObjectName="College1en.dbo.Courses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Courses] WHERE (([CId] = @Original_CId) AND ([CName] = @Original_CName) AND ([ProgId] = @Original_ProgId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Courses] ([CId], [CName], [ProgId]) VALUES (@CId, @CName, @ProgId);
SELECT CId, CName, ProgId FROM Courses WHERE (CId = @CId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CId, CName, ProgId FROM dbo.Courses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Courses] SET [CId] = @CId, [CName] = @CName, [ProgId] = @ProgId WHERE (([CId] = @Original_CId) AND ([CName] = @Original_CName) AND ([ProgId] = @Original_ProgId));
SELECT CId, CName, ProgId FROM Courses WHERE (CId = @CId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CId" DataSetColumn="CId" />
              <Mapping SourceColumn="CName" DataSetColumn="CName" />
              <Mapping SourceColumn="ProgId" DataSetColumn="ProgId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EnrollmentsTableAdapter" GeneratorDataComponentClassName="EnrollmentsTableAdapter" Name="Enrollments" UserDataComponentName="EnrollmentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="College1enConnectionString (Settings)" DbObjectName="College1en.dbo.Enrollments" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Enrollments] WHERE (([StId] = @Original_StId) AND ([CId] = @Original_CId) AND ([FinalGrade] = @Original_FinalGrade))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FinalGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Enrollments] ([StId], [CId], [FinalGrade]) VALUES (@StId, @CId, @FinalGrade);
SELECT StId, CId, FinalGrade FROM Enrollments WHERE (CId = @CId) AND (StId = @StId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@FinalGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StId, CId, FinalGrade FROM dbo.Enrollments</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Enrollments] SET [StId] = @StId, [CId] = @CId, [FinalGrade] = @FinalGrade WHERE (([StId] = @Original_StId) AND ([CId] = @Original_CId) AND ([FinalGrade] = @Original_FinalGrade));
SELECT StId, CId, FinalGrade FROM Enrollments WHERE (CId = @CId) AND (StId = @StId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@FinalGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalGrade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FinalGrade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalGrade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StId" DataSetColumn="StId" />
              <Mapping SourceColumn="CId" DataSetColumn="CId" />
              <Mapping SourceColumn="FinalGrade" DataSetColumn="FinalGrade" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProgramsTableAdapter" GeneratorDataComponentClassName="ProgramsTableAdapter" Name="Programs" UserDataComponentName="ProgramsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="College1enConnectionString (Settings)" DbObjectName="College1en.dbo.Programs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Programs] WHERE (([ProgId] = @Original_ProgId) AND ([ProgName] = @Original_ProgName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProgName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Programs] ([ProgId], [ProgName]) VALUES (@ProgId, @ProgName);
SELECT ProgId, ProgName FROM Programs WHERE (ProgId = @ProgId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProgName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProgId, ProgName FROM dbo.Programs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Programs] SET [ProgId] = @ProgId, [ProgName] = @ProgName WHERE (([ProgId] = @Original_ProgId) AND ([ProgName] = @Original_ProgName));
SELECT ProgId, ProgName FROM Programs WHERE (ProgId = @ProgId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProgName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProgName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProgId" DataSetColumn="ProgId" />
              <Mapping SourceColumn="ProgName" DataSetColumn="ProgName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="College1enConnectionString (Settings)" DbObjectName="College1en.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([StId] = @Original_StId) AND ([StName] = @Original_StName) AND ([ProgId] = @Original_ProgId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([StId], [StName], [ProgId]) VALUES (@StId, @StName, @ProgId);
SELECT StId, StName, ProgId FROM Students WHERE (StId = @StId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StId, StName, ProgId FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [StId] = @StId, [StName] = @StName, [ProgId] = @ProgId WHERE (([StId] = @Original_StId) AND ([StName] = @Original_StName) AND ([ProgId] = @Original_ProgId));
SELECT StId, StName, ProgId FROM Students WHERE (StId = @StId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StId" DataSetColumn="StId" />
              <Mapping SourceColumn="StName" DataSetColumn="StName" />
              <Mapping SourceColumn="ProgId" DataSetColumn="ProgId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="College1enDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="College1enDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="College1enDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Courses" msprop:Generator_RowClassName="CoursesRow" msprop:Generator_RowEvHandlerName="CoursesRowChangeEventHandler" msprop:Generator_RowDeletedName="CoursesRowDeleted" msprop:Generator_RowDeletingName="CoursesRowDeleting" msprop:Generator_RowEvArgName="CoursesRowChangeEvent" msprop:Generator_TablePropName="Courses" msprop:Generator_RowChangedName="CoursesRowChanged" msprop:Generator_UserTableName="Courses" msprop:Generator_RowChangingName="CoursesRowChanging" msprop:Generator_TableClassName="CoursesDataTable" msprop:Generator_TableVarName="tableCourses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CId" msprop:Generator_UserColumnName="CId" msprop:Generator_ColumnPropNameInTable="CIdColumn" msprop:Generator_ColumnPropNameInRow="CId" msprop:Generator_ColumnVarNameInTable="columnCId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="7" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CName" msprop:Generator_UserColumnName="CName" msprop:Generator_ColumnPropNameInTable="CNameColumn" msprop:Generator_ColumnPropNameInRow="CName" msprop:Generator_ColumnVarNameInTable="columnCName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProgId" msprop:Generator_UserColumnName="ProgId" msprop:Generator_ColumnPropNameInTable="ProgIdColumn" msprop:Generator_ColumnPropNameInRow="ProgId" msprop:Generator_ColumnVarNameInTable="columnProgId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Enrollments" msprop:Generator_RowClassName="EnrollmentsRow" msprop:Generator_RowEvHandlerName="EnrollmentsRowChangeEventHandler" msprop:Generator_RowDeletedName="EnrollmentsRowDeleted" msprop:Generator_RowDeletingName="EnrollmentsRowDeleting" msprop:Generator_RowEvArgName="EnrollmentsRowChangeEvent" msprop:Generator_TablePropName="Enrollments" msprop:Generator_RowChangedName="EnrollmentsRowChanged" msprop:Generator_UserTableName="Enrollments" msprop:Generator_RowChangingName="EnrollmentsRowChanging" msprop:Generator_TableClassName="EnrollmentsDataTable" msprop:Generator_TableVarName="tableEnrollments">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StId" msprop:Generator_UserColumnName="StId" msprop:Generator_ColumnPropNameInTable="StIdColumn" msprop:Generator_ColumnPropNameInRow="StId" msprop:Generator_ColumnVarNameInTable="columnStId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CId" msprop:Generator_UserColumnName="CId" msprop:Generator_ColumnPropNameInTable="CIdColumn" msprop:Generator_ColumnPropNameInRow="CId" msprop:Generator_ColumnVarNameInTable="columnCId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="7" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FinalGrade" msprop:Generator_UserColumnName="FinalGrade" msprop:Generator_ColumnPropNameInTable="FinalGradeColumn" msprop:Generator_ColumnPropNameInRow="FinalGrade" msprop:Generator_ColumnVarNameInTable="columnFinalGrade" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Programs" msprop:Generator_RowClassName="ProgramsRow" msprop:Generator_RowEvHandlerName="ProgramsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProgramsRowDeleted" msprop:Generator_RowDeletingName="ProgramsRowDeleting" msprop:Generator_RowEvArgName="ProgramsRowChangeEvent" msprop:Generator_TablePropName="Programs" msprop:Generator_RowChangedName="ProgramsRowChanged" msprop:Generator_UserTableName="Programs" msprop:Generator_RowChangingName="ProgramsRowChanging" msprop:Generator_TableClassName="ProgramsDataTable" msprop:Generator_TableVarName="tablePrograms">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProgId" msprop:Generator_UserColumnName="ProgId" msprop:Generator_ColumnPropNameInTable="ProgIdColumn" msprop:Generator_ColumnPropNameInRow="ProgId" msprop:Generator_ColumnVarNameInTable="columnProgId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProgName" msprop:Generator_UserColumnName="ProgName" msprop:Generator_ColumnPropNameInTable="ProgNameColumn" msprop:Generator_ColumnPropNameInRow="ProgName" msprop:Generator_ColumnVarNameInTable="columnProgName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_RowClassName="StudentsRow" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_TablePropName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_UserTableName="Students" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_TableVarName="tableStudents">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StId" msprop:Generator_UserColumnName="StId" msprop:Generator_ColumnPropNameInTable="StIdColumn" msprop:Generator_ColumnPropNameInRow="StId" msprop:Generator_ColumnVarNameInTable="columnStId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StName" msprop:Generator_UserColumnName="StName" msprop:Generator_ColumnPropNameInTable="StNameColumn" msprop:Generator_ColumnPropNameInRow="StName" msprop:Generator_ColumnVarNameInTable="columnStName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProgId" msprop:Generator_UserColumnName="ProgId" msprop:Generator_ColumnPropNameInTable="ProgIdColumn" msprop:Generator_ColumnPropNameInRow="ProgId" msprop:Generator_ColumnVarNameInTable="columnProgId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Courses" />
      <xs:field xpath="mstns:CId" />
    </xs:unique>
    <xs:unique name="Enrollments_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Enrollments" />
      <xs:field xpath="mstns:StId" />
      <xs:field xpath="mstns:CId" />
    </xs:unique>
    <xs:unique name="Programs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Programs" />
      <xs:field xpath="mstns:ProgId" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:StId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Courses__ProgId__45F365D3" msdata:parent="Programs" msdata:child="Courses" msdata:parentkey="ProgId" msdata:childkey="ProgId" msprop:Generator_UserParentTable="Programs" msprop:Generator_UserChildTable="Courses" msprop:Generator_RelationVarName="relationFK__Courses__ProgId__45F365D3" msprop:Generator_ChildPropName="GetCoursesRows" msprop:Generator_ParentPropName="ProgramsRow" msprop:Generator_UserRelationName="FK__Courses__ProgId__45F365D3" />
      <msdata:Relationship name="FK__Enrollment__StId__4BAC3F29" msdata:parent="Students" msdata:child="Enrollments" msdata:parentkey="StId" msdata:childkey="StId" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="Enrollments" msprop:Generator_RelationVarName="relationFK__Enrollment__StId__4BAC3F29" msprop:Generator_ChildPropName="GetEnrollmentsRows" msprop:Generator_ParentPropName="StudentsRow" msprop:Generator_UserRelationName="FK__Enrollment__StId__4BAC3F29" />
      <msdata:Relationship name="FK__Enrollments__CId__4CA06362" msdata:parent="Courses" msdata:child="Enrollments" msdata:parentkey="CId" msdata:childkey="CId" msprop:Generator_UserParentTable="Courses" msprop:Generator_UserChildTable="Enrollments" msprop:Generator_RelationVarName="relationFK__Enrollments__CId__4CA06362" msprop:Generator_ChildPropName="GetEnrollmentsRows" msprop:Generator_UserRelationName="FK__Enrollments__CId__4CA06362" msprop:Generator_ParentPropName="CoursesRow" />
      <msdata:Relationship name="FK__Students__ProgId__48CFD27E" msdata:parent="Programs" msdata:child="Students" msdata:parentkey="ProgId" msdata:childkey="ProgId" msprop:Generator_UserParentTable="Programs" msprop:Generator_UserChildTable="Students" msprop:Generator_RelationVarName="relationFK__Students__ProgId__48CFD27E" msprop:Generator_ChildPropName="GetStudentsRows" msprop:Generator_UserRelationName="FK__Students__ProgId__48CFD27E" msprop:Generator_ParentPropName="ProgramsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>